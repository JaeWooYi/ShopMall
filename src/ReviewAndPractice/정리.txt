*java
*배열과 List의 차이점
- 배열의 경우 0인덱스 부터 순차적으로 생기고 중간값 인덱스가 삭제 되면 빈인덱스 값이 생성
- List의 경우 삭제된 데이터를 고려하지 않고 연속적으로 배열

*클래스 내부에 선언하여 사용되는 내부클래스의 필요성
- 내부 클래스를 사용하게 되면 비슷한 형태의 클래스들을 묶을 수 있어서 코드의 캡슐화를 증가시킬 수 있다. 또한, 내부 클래스에서 외부 클래스의 멤버에 손쉽게 접근 할 수 있게 된다.

*메서드 오버로딩과 오버라이딩에 대해 설명
- 오버로딩 : 같은 이름의 메서드 여러개를 가지면서 매개변수의 유형과 개수가 다르도록 하는 기술
- 오버라이딩 : 상위 클래스가 가지고 있는 메서드를 하위 클래스가 재정의해서 사용

*Service & jsp
 - service를 통해 업무단위를 구분 실행

*cookie 객체와 session 객체의 사용용도
- cookie : 개인 PC에 저장됨.
- session : 접속중인 웹 서버에 저장됨.
- 공통점 : 웹 통신간 유지하려는 정보(ex:로그인 정보 등)를 저장하기 위해 사용하는 것

*jsp:include액션과 include 디렉티브의 사용상 차이점
- 디렉티브 : JSP 페이지를 이루고 있는 요소 중 하나이며, 웹 브라우저가 요청한 JSP 페이지가 실행될 때 필요한 설정 정보의 지정에 사용됩니다.
- 액션 : JSP 페이지를 이루고 있는 요소 중 하나이며, 페이지와 페이지 사이의 제어를 이동시킬 수도 있고, 다른 페이지의 실행 결과를 현재에 페이지에 포함시킬 수 있습니다.

*Database
*조인들에 대한 설명(self, inner,left outer,right ouzer, fullouter join)


*데이터베이스의 트랜잭션과 락에 대한 설명
- 트랜잭션 : 트랜잭션은 여러 개의 수행이 일련의 처리 단위로 묶이는 것을 말한다.
- 락 : Lock이란 트랜잭션 처리의 순차성을 보장하기 위한 방법입니다. 서로 다른 작업에서 같은 자원을 동시에 필요로 할 때 자원 경쟁이 일어나는데, 이때 순서대로 사용되는 동시성을 보장하기 위한 기능이다.

*framwork
* Spring 프레임워크에서 Auto-wiring과 Auto-weaving의 개념
- auto-wiring : 필요한 의존 객체의 타입에 해당하는 빈을 찾아 주입한다.
- auto-weaving : Advice를 핵심 로직 코드에 적용하는 것을 weaving 이라고 한다. 즉 공통 코드를 핵심 로직 코드에 삽입하는 것이 weaving이다.어드바이스를 핵심 로직 코드에 삽입하는 것을  위빙이라고 한다.

* Spring프레임워크의 사용 효율성
- 프레임워크이기 때문에, 개발자의 수준과 실력에 상관없이 일정 수준의 품질을 기대할 수 있습니다. 담당자 혹은 개발자가 도중에 바뀌더라도, 유지보수에 관한 리스크를 줄일 수 있습니다.
- 편리한 MVC구조

